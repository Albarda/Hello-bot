pipeline {
    agent any

    environment {
        DOCKER_IMAGE_NAME = 'alon-bot'
        DOCKER_IMAGE_NAME_NGINX = 'alon-bot-nginx'
        DOCKER_HUB_REPO = 'kubealon'
    }

    stages {
        stage('Build Docker images') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'dockerhub-cred', usernameVariable: 'DOCKER_HUB_USERNAME', passwordVariable: 'DOCKER_HUB_PASSWORD')]) {
                        docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-cred') {
                            def dockerImage = docker.build("${DOCKER_HUB_REPO}/${DOCKER_IMAGE_NAME}.ENV.build")
                            dockerImage.push('latest')

                            def dockerImageNginx = docker.build("${DOCKER_HUB_REPO}/${DOCKER_IMAGE_NAME_NGINX}", '-f Dockerfile-nginx .')
                            dockerImageNginx.push('latest')
                        }
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    withCredentials([file(credentialsId: 'kubeconfig-file', variable: 'KUBECONFIG')]) {
                        sh 'kubectl apply -f deployment.yaml'
                        sh 'kubectl apply -f service.yaml'
                        sh 'kubectl apply -f hpa.yaml'
                        sh 'kubectl apply -f pvc.yaml'
                        sh 'kubectl apply -f ingress.yaml'
                    }
                }
            }
        }
    }
}
